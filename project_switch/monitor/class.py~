#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os, re, sys
sys.path.append('/home/meidl/python')
import orm

class switch():
    def __init__(self, host, vendor, model, version='2c', community='public'):
        self._version = version
        self._community = community
        self._host = host
        self._base_snmpget_cmd = ('snmpget -v %s -c %s %s ' % (self._version, self._community, self._host))
        self._base_snmpwalk_cmd = ('snmpwalk -v %s -c %s %s ' % (self._version, self._community, self._host))
        self._model = vendor+'_'+model
        self._mod = __import__('switchlib.'+self._model, globals(), locals(), self._model)

        def exec_snmpget(oid):
            return ''.join(os.popen(self._base_snmpget_cmd+oid))
        self.get_oid = exec_snmpget
        self._mod.get_oid = self.get_oid    # import function : get_oid into imported model

        def exec_snmpwalk(oid):
            return ''.join(os.popen(self._base_snmpwalk_cmd+oid))
        self.walk_oid = exec_snmpwalk
        self._mod.walk_oid = self.walk_oid    # import function : walk_oid into imported model


    def get_memory_usage(self):
        r = self._mod.get_memory_usage()
        return r

    def get_cpu_usage(self):
        r = self._mod.get_cpu_usage_5_sec()
        return r

    def get_if_index(self):
        r = [ int(x) for x in re.findall('INTEGER: (.*)\n', self.walk_oid('1.3.6.1.2.1.2.2.1.1')) ]
        return r

    def get_if_desc(self):
        r = re.findall('STRING: (.*)\n', self.walk_oid('1.3.6.1.2.1.2.2.1.2'))
        return r

    def get_if_stat(self):
        r = re.findall('INTEGER: (.*)\([12]\)\n', self.walk_oid('1.3.6.1.2.1.2.2.1.8'))
        return r

    def get_if_inOctets(self):
        r = [ int(x) for x in re.findall('Counter64: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.6')) ]
        return r

    def get_if_outOctets(self):
        r = [ int(x) for x in re.findall('Counter64: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.10')) ]
        return r

    def get_if_speed(self):
        r = [ int(x) for x in re.findall('Gauge32: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.15')) ]
        return r

    def get_if_inMulticastPkts(self):
        r = [ int(x) for x in re.findall('Gauge32: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.8')) ]
        return r

    def get_if_outMulticastPkts(self):
        r = [ int(x) for x in re.findall('Gauge32: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.12')) ]
        return r

    def get_if_inBroadcastPkts(self):
        r = [ int(x) for x in re.findall('Gauge32: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.9')) ]
        return r

    def get_if_outBroadcastPkts(self):
        r = [ int(x) for x in re.findall('Gauge32: (.*)\n', self.walk_oid('1.3.6.1.2.1.31.1.1.1.13')) ]
        return r


